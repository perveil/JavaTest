package AlgorithmTest;
/*
*  题目一：请从一个字符串中找出最长的没有重复字母的子字符串的最长长度
*  思路一：动态规划：f(n) 是一个求 从第一个字符开始的长度为n的字符串的最大目标子串
*  f(n) 当第n个字符在之前没有出现过则：f(n)=f(n-1)+1;
*      当第n个字符在之前出现过：1. 相对上一个该字符所出现的位置的偏移量 m
*      如果 m>f(n-1) 则上一个该字符没有出现在f（n-1）的计算结果中 f(n)=f(n-1)
*      如果 m<f(n-1) 则上一个字符出现在f(n-1)所代表的目标字串，所以f（n）=m
*
* */

public class MaxLengthOfSubString {
}
